name: Nightly Build

run-name: Building the Android and iOS app bundles ðŸš€

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # Runs every day at midnight UTC

jobs:

  BuildAndroid:
    runs-on: ubuntu-latest
    environment: build
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'
          check-latest: true

      - name: Checkout app code
        uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - run: flutter doctor -v

      - run: flutter pub get

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.SIGNING_STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.SIGNING_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.SIGNING_KEY_ALIAS }}" >> android/key.properties

      - name: Build Android Debug APK
        run: flutter build apk --debug

      - name: Build Android Debug AppBundle
        run: flutter build appbundle --debug

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk

      - name: Upload Android AppBundle Artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug-aab
          path: build/app/outputs/flutter-apk/app-debug.aab

  BuildiOS:
    runs-on: macos-latest
    environment: build
    permissions:
      contents: write
    steps:

      - name: Select Xcode 16
        run: sudo xcode-select -s /Applications/Xcode_16.3.app

      - name: Verify Xcode version
        run: xcodebuild -version

      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - run: flutter doctor -v

      - run: flutter pub get

      - name: Install the Certificate and Provisioning Profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          EXPORT_OPTIONS_PLIST: ${{ secrets.EXPORT_OPTIONS_PLIST }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          EXPORT_OPTS_PATH=$RUNNER_TEMP/ExportOptions.plist
          echo -n "$EXPORT_OPTIONS_PLIST" | base64 --decode -o $EXPORT_OPTS_PATH

      - name: Build and Sign IPA
        run: flutter build ipa --debug --export-options-plist=$RUNNER_TEMP/ExportOptions.plist
           
      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v4
        with:
         name: debug-ipa
         path: build/ios/ipa/*.ipa

      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
