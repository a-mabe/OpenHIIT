name: Promote OpenHIIT Release

run-name: ${{ github.actor }} is promoting a release ðŸš€

on:
  workflow_dispatch:
  push:
    tags:
      - '*.*.*'
      - '!*-beta*'

jobs:
  PromoteRelease:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: write
    steps:
      - name: Extract Base Version
        id: extract_version
        run: |
          TAG_NAME=${{ github.ref_name }}
          BASE_VERSION=$(echo "$TAG_NAME" | sed -E 's/-beta[0-9]*//')
          echo "BASE_VERSION=$BASE_VERSION" >> $GITHUB_ENV
      
      - name: Find Latest Beta Release
        id: find_beta_release
        run: |
          LATEST_BETA=$(gh release list --repo ${{ github.repository }} --json tagName --jq ".[] | select(.tagName | test(\"^${BASE_VERSION}-beta[0-9]*$\")) | .tagName" | sort -V | tail -n 1)
          if [ -z "$LATEST_BETA" ]; then
            echo "No beta release found for version $BASE_VERSION"
            exit 1
          fi
          echo "LATEST_BETA=$LATEST_BETA" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Download Beta Release Assets
        uses: dsaltares/fetch-gh-release-asset@1.0.0
        with:
          repo: ${{ github.repository }}
          version: ${{ env.LATEST_BETA }}
          file: "app-release.aab, app-release.apk, workout_timer.ipa"
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create Final Release
        uses: ncipollo/release-action@v1.13.0
        with:
          artifacts: "app-release.aab, app-release.apk, workout_timer.ipa"
          draft: true
          tag: ${{ github.ref_name }}
          generateReleaseNotes: true
          skipIfReleaseExists: true
